<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Scores</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 20px;
        }
        th, td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }
        th {
            background-color: #f2f2f2;
        }
        .sort-btn {
            cursor: pointer;
            color: blue;
        }
        #userModal {
            display: none; 
            position: fixed; 
            z-index: 1; 
            left: 0; 
            top: 0; 
            width: 100%; 
            height: 100%; 
            overflow: auto; 
            background-color: rgb(0,0,0); 
            background-color: rgba(0,0,0,0.4); 
            padding-top: 60px; 
        }
        #modalContent {
            background-color: #fefefe;
            margin: 5% auto; 
            padding: 20px;
            border: 1px solid #888;
            width: 80%; 
        }
    </style>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>

<h1>User Scores</h1>

<input type="text" id="searchInput" placeholder="Search by name..." onkeyup="searchTable()">

<table id="userTable">
    <thead>
        <tr>
            <th>Name <span class="sort-btn" onclick="sortTable(0)">&#x25B2;</span></th>
            <th>Phone No</th>
            <th>English Score <span class="sort-btn" onclick="sortTable(1)">&#x25B2;</span></th>
            <th>Chinese Score <span class="sort-btn" onclick="sortTable(2)">&#x25B2;</span></th>
            <th>Math Score <span class="sort-btn" onclick="sortTable(3)">&#x25B2;</span></th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        <% users.forEach(user => { %>
            <% if (!user.admin) { %> <!-- Exclude admin users -->
                <tr>
                    <td onclick="showUserDetails('<%= user.name %>', '<%= user.phoneNo %>', <%= user.englishScore %>, <%= user.chineseScore %>, <%= user.mathScore %>)"><%= user.name %></td>
                    <td><%= user.phoneNo %></td>
                    <td><%= user.englishScore %></td>
                    <td><%= user.chineseScore %></td>
                    <td><%= user.mathScore %></td>
					<td><a href="/updateScore/<%= user._id %>" class="edit-btn">Edit</a></td>
                </tr>
            <% } %>
        <% }) %>
    </tbody>
</table>


<canvas id="scoreChart" width="400" height="200"></canvas>

<div id="userModal">
    <div id="modalContent">
        <span onclick="document.getElementById('userModal').style.display='none'" style="cursor:pointer; float:right;">&times;</span>
        <h2>User Details</h2>
        <p id="modalText"></p>
    </div>
</div>

<script>
// Function to sort the table
function sortTable(columnIndex) {
    const table = document.getElementById("userTable");
    let switching = true;
    let dir = "asc"; // Set the sorting direction to ascending
    let switchCount = 0;

    while (switching) {
        switching = false;
        const rows = table.rows;

        for (let i = 1; i < (rows.length - 1); i++) {
            let shouldSwitch = false;
            const x = rows[i].getElementsByTagName("TD")[columnIndex];
            const y = rows[i + 1].getElementsByTagName("TD")[columnIndex];

            // Get values for comparison
            const xValue = x.innerHTML.trim();
            const yValue = y.innerHTML.trim();

            if (dir === "asc") {
                if (columnIndex === 0) { // Name column
                    if (xValue.toLowerCase() > yValue.toLowerCase()) {
                        shouldSwitch = true;
                        break;
                    }
                } else { // Score columns
                    if (parseFloat(xValue) > parseFloat(yValue)) {
                        shouldSwitch = true;
                        break;
                    }
                }
            } else if (dir === "desc") {
                if (columnIndex === 0) { // Name column
                    if (xValue.toLowerCase() < yValue.toLowerCase()) {
                        shouldSwitch = true;
                        break;
                    }
                } else { // Score columns
                    if (parseFloat(xValue) < parseFloat(yValue)) {
                        shouldSwitch = true;
                        break;
                    }
                }
            }
        }

        if (shouldSwitch) {
            rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
            switching = true;
            switchCount++;
        } else {
            if (switchCount === 0 && dir === "asc") {
                dir = "desc";
                switching = true;
            }
        }
    }
}

// Function to search the table
function searchTable() {
    const input = document.getElementById("searchInput");
    const filter = input.value.toLowerCase();
    const table = document.getElementById("userTable");
    const tr = table.getElementsByTagName("tr");

    for (let i = 1; i < tr.length; i++) {
        const td = tr[i].getElementsByTagName("TD")[0]; // Search only in the first column (Name)
        if (td) {
            const txtValue = td.textContent || td.innerText;
            tr[i].style.display = txtValue.toLowerCase().indexOf(filter) > -1 ? "" : "none";
        }
    }
}

// Function to show user details in a modal
function showUserDetails(name, phoneNo, englishScore, chineseScore, mathScore) {
    const modalText = `Name: ${name}<br>Phone No: ${phoneNo}<br>English Score: ${englishScore}<br>Chinese Score: ${chineseScore}<br>Math Score: ${mathScore}`;
    document.getElementById("modalText").innerHTML = modalText;
    document.getElementById('userModal').style.display = 'block';
}

// Chart.js implementation
const ctx = document.getElementById('scoreChart').getContext('2d');
const scores = {
    labels: [], // This will hold student names
    datasets: [
        {
            label: 'English Score',
            data: [],
            backgroundColor: 'rgba(75, 192, 192, 0.6)', // Color for English
            borderColor: 'rgba(75, 192, 192, 1)',
            borderWidth: 1,
            stack: 'Stack 0' // Specify stack name
        },
        {
            label: 'Chinese Score',
            data: [],
            backgroundColor: 'rgba(153, 102, 255, 0.6)', // Color for Chinese
            borderColor: 'rgba(153, 102, 255, 1)',
            borderWidth: 1,
            stack: 'Stack 0' // Specify stack name
        },
        {
            label: 'Math Score',
            data: [],
            backgroundColor: 'rgba(255, 99, 132, 0.6)', // Color for Math
            borderColor: 'rgba(255, 99, 132, 1)',
            borderWidth: 1,
            stack: 'Stack 0' // Specify stack name
        }
    ]
};

// Populate the chart data from users
<% users.forEach(user => { %>
   <% if (!user.admin) { %> 
       scores.labels.push('<%= user.name %>');
       scores.datasets[0].data.push(<%= user.englishScore %>);
       scores.datasets[1].data.push(<%= user.chineseScore %>);
       scores.datasets[2].data.push(<%= user.mathScore %>);
   <% } %>
<% }) %>

const scoreChart = new Chart(ctx, {
   type: 'bar',
   data: scores,
   options: {
       responsive: true,
       scales: {
           yAxes: [{
               stacked: true, // Enable stacking on y-axis
               ticks: {
                   beginAtZero:true
               }
           }],
           xAxes: [{
               stacked: true // Enable stacking on x-axis
           }]
       },
       legend: {
           position: 'top',
       },
       title: {
           display: true,
           text: 'Student Scores by Subject'
       }
   }
});

</script>

</body>
</html>

